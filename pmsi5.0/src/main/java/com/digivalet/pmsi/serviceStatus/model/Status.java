/*
 * Digivalet Services Status
 * This is DigiValet Service Status server.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@digivalet.in
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.digivalet.pmsi.serviceStatus.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

/**
 * Status
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-08-27T07:13:54.980Z")
public class Status   {
  @JsonProperty("serviceName")
  private String serviceName = null;

  /**
   * Gets or Sets serviceStatus
   */
  public enum ServiceStatusEnum {
    GREEN("GREEN"),
    
    RED("RED"),
    
    AMBER("AMBER");

    private String value;

    ServiceStatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServiceStatusEnum fromValue(String text) {
      for (ServiceStatusEnum b : ServiceStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("serviceStatus")
  private ServiceStatusEnum serviceStatus = null;

  /**
   * Gets or Sets databaseConnectivity
   */
  public enum DatabaseConnectivityEnum {
    GREEN("GREEN"),
    
    RED("RED"),
    
    AMBER("AMBER");

    private String value;

    DatabaseConnectivityEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DatabaseConnectivityEnum fromValue(String text) {
      for (DatabaseConnectivityEnum b : DatabaseConnectivityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("databaseConnectivity")
  private DatabaseConnectivityEnum databaseConnectivity = null;

  @JsonProperty("lastSuccessDBTimestamp")
  private Long lastSuccessDBTimestamp = null;

  @JsonProperty("remarks")
  private String remarks = null;

  @JsonProperty("modules")
  private List<ModuleStatus> modules = null;

  public Status serviceName(String serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Get serviceName
   * @return serviceName
   **/
  @JsonProperty("serviceName")
  @ApiModelProperty(example = "POSI", value = "")
  public String getServiceName() {
    return serviceName;
  }

  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }

  public Status serviceStatus(ServiceStatusEnum serviceStatus) {
    this.serviceStatus = serviceStatus;
    return this;
  }

  /**
   * Get serviceStatus
   * @return serviceStatus
   **/
  @JsonProperty("serviceStatus")
  @ApiModelProperty(example = "GREEN", value = "")
  public ServiceStatusEnum getServiceStatus() {
    return serviceStatus;
  }

  public void setServiceStatus(ServiceStatusEnum serviceStatus) {
    this.serviceStatus = serviceStatus;
  }

  public Status databaseConnectivity(DatabaseConnectivityEnum databaseConnectivity) {
    this.databaseConnectivity = databaseConnectivity;
    return this;
  }

  /**
   * Get databaseConnectivity
   * @return databaseConnectivity
   **/
  @JsonProperty("databaseConnectivity")
  @ApiModelProperty(example = "GREEN", value = "")
  public DatabaseConnectivityEnum getDatabaseConnectivity() {
    return databaseConnectivity;
  }

  public void setDatabaseConnectivity(DatabaseConnectivityEnum databaseConnectivity) {
    this.databaseConnectivity = databaseConnectivity;
  }

  public Status lastSuccessDBTimestamp(Long lastSuccessDBTimestamp) {
    this.lastSuccessDBTimestamp = lastSuccessDBTimestamp;
    return this;
  }

  /**
   * Get lastSuccessDBTimestamp
   * @return lastSuccessDBTimestamp
   **/
  @JsonProperty("lastSuccessDBTimestamp")
  @ApiModelProperty(example = "1535191460000", value = "")
  public Long getLastSuccessDBTimestamp() {
    return lastSuccessDBTimestamp;
  }

  public void setLastSuccessDBTimestamp(Long lastSuccessDBTimestamp) {
    this.lastSuccessDBTimestamp = lastSuccessDBTimestamp;
  }

  public Status remarks(String remarks) {
    this.remarks = remarks;
    return this;
  }

  /**
   * Get remarks
   * @return remarks
   **/
  @JsonProperty("remarks")
  @ApiModelProperty(example = "Everything working fine.", value = "")
  public String getRemarks() {
    return remarks;
  }

  public void setRemarks(String remarks) {
    this.remarks = remarks;
  }

  public Status modules(List<ModuleStatus> modules) {
    this.modules = modules;
    return this;
  }

  public Status addModulesItem(ModuleStatus modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<ModuleStatus>();
    }
    this.modules.add(modulesItem);
    return this;
  }

  /**
   * Get modules
   * @return modules
   **/
  @JsonProperty("modules")
  @ApiModelProperty(value = "")
  public List<ModuleStatus> getModules() {
    return modules;
  }

  public void setModules(List<ModuleStatus> modules) {
    this.modules = modules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Status status = (Status) o;
    return Objects.equals(this.serviceName, status.serviceName) &&
        Objects.equals(this.serviceStatus, status.serviceStatus) &&
        Objects.equals(this.databaseConnectivity, status.databaseConnectivity) &&
        Objects.equals(this.lastSuccessDBTimestamp, status.lastSuccessDBTimestamp) &&
        Objects.equals(this.remarks, status.remarks) &&
        Objects.equals(this.modules, status.modules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceName, serviceStatus, databaseConnectivity, lastSuccessDBTimestamp, remarks, modules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Status {\n");
    
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    serviceStatus: ").append(toIndentedString(serviceStatus)).append("\n");
    sb.append("    databaseConnectivity: ").append(toIndentedString(databaseConnectivity)).append("\n");
    sb.append("    lastSuccessDBTimestamp: ").append(toIndentedString(lastSuccessDBTimestamp)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

