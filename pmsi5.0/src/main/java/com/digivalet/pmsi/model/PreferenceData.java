/*
 * DigiValet Notification This is DigiValet Notification services used to post
 * guest preference to Digivalet
 *
 * OpenAPI spec version: 1.0.0 Contact: apisupport@digivalet.in
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git Do not edit the class
 * manually.
 */


package com.digivalet.pmsi.model;

import java.util.Objects;
import javax.validation.constraints.NotNull;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * PreferenceData
 */
@javax.annotation.Generated(
         value = "io.swagger.codegen.languages.JavaJerseyServerCodegen",
         date = "2018-12-21T11:32:48.219Z")
public class PreferenceData
{
   @JsonProperty("guestId")
   private String guestId = "";

   @JsonProperty("mood")
   private String mood = "";

   @JsonProperty("temperature")
   private String temperature = "";

   @JsonProperty("hotelCode")
   private String hotelCode = "";

   @JsonProperty("roomNumber")
   private String roomNumber = "";

   @JsonProperty("language")
   private String language = "";

   @JsonProperty("specialInstructions")
   private String specialInstructions = "";

   @JsonProperty("reservationNumber")
   private String reservationNumber = "";

   @JsonProperty("fragrance")
   private String fragrance = "";



   @JsonProperty("fragrance")
   @ApiModelProperty(required = true, value = "fragrance of guest")
   @NotNull
   public String getFragrance()
   {
      return fragrance;
   }

   public void setFragrance(String fragrance)
   {
      this.fragrance = fragrance;
   }

   public PreferenceData reservationNumber(String reservationNumber)
   {
      this.reservationNumber = reservationNumber;
      return this;
   }

   /**
    * reservation id of guest
    * 
    * @return guestId
    **/
   @JsonProperty("reservationNumber")
   @ApiModelProperty(required = true,
            value = "reservationNumber number of guest")
   @NotNull
   public String getReservationNumber()
   {
      return reservationNumber;
   }

   public void setReservationNumber(String reservationNumber)
   {
      this.reservationNumber = reservationNumber;
   }



   public PreferenceData guestId(String guestId)
   {
      this.guestId = guestId;
      return this;
   }

   /**
    * reservation id of guest
    * 
    * @return guestId
    **/
   @JsonProperty("guestId")
   @ApiModelProperty(required = true, value = "reservation id of guest")
   @NotNull
   public String getGuestId()
   {
      return guestId;
   }

   public void setGuestId(String guestId)
   {
      this.guestId = guestId;
   }

   public PreferenceData mood(String mood)
   {
      this.mood = mood;
      return this;
   }

   /**
    * Mood of guest
    * 
    * @return mood
    **/
   @JsonProperty("mood")
   @ApiModelProperty(required = true, value = "Mood of guest")
   @NotNull
   public String getMood()
   {
      return mood;
   }

   public void setMood(String mood)
   {
      this.mood = mood;
   }

   public PreferenceData temperature(String temperature)
   {
      this.temperature = temperature;
      return this;
   }

   /**
    * Prefered temperature of guest
    * 
    * @return temperature
    **/
   @JsonProperty("temperature")
   @ApiModelProperty(value = "Prefered temperature of guest")
   public String getTemperature()
   {
      return temperature;
   }

   public void setTemperature(String temperature)
   {
      this.temperature = temperature;
   }

   public PreferenceData hotelCode(String hotelCode)
   {
      this.hotelCode = hotelCode;
      return this;
   }

   /**
    * hotel code for W London
    * 
    * @return hotelCode
    **/
   @JsonProperty("hotelCode")
   @ApiModelProperty(value = "hotel code for W London")
   public String getHotelCode()
   {
      return hotelCode;
   }

   public void setHotelCode(String hotelCode)
   {
      this.hotelCode = hotelCode;
   }

   public PreferenceData roomNumber(String roomNumber)
   {
      this.roomNumber = roomNumber;
      return this;
   }

   /**
    * Room number in which guest is staying
    * 
    * @return roomNumber
    **/
   @JsonProperty("roomNumber")
   @ApiModelProperty(required = true,
            value = "Room number in which guest is staying")
   @NotNull
   public String getRoomNumber()
   {
      return roomNumber;
   }

   public void setRoomNumber(String roomNumber)
   {
      this.roomNumber = roomNumber;
   }

   public PreferenceData language(String language)
   {
      this.language = language;
      return this;
   }

   /**
    * Guest&#39;s prefered language
    * 
    * @return language
    **/
   @JsonProperty("language")
   @ApiModelProperty(value = "Guest's prefered language")
   public String getLanguage()
   {
      return language;
   }

   public void setLanguage(String language)
   {
      this.language = language;
   }

   public PreferenceData specialInstructions(String specialInstructions)
   {
      this.specialInstructions = specialInstructions;
      return this;
   }

   /**
    * Special Instructions from guest
    * 
    * @return specialInstructions
    **/
   @JsonProperty("specialInstructions")
   @ApiModelProperty(value = "Special Instructions from guest")
   public String getSpecialInstructions()
   {
      return specialInstructions;
   }

   public void setSpecialInstructions(String specialInstructions)
   {
      this.specialInstructions = specialInstructions;
   }


   @Override
   public boolean equals(java.lang.Object o)
   {
      if (this == o)
      {
         return true;
      }
      if (o == null || getClass() != o.getClass())
      {
         return false;
      }
      PreferenceData preferenceData = (PreferenceData) o;
      return Objects.equals(this.guestId, preferenceData.guestId)
               && Objects.equals(this.mood, preferenceData.mood)
               && Objects.equals(this.temperature, preferenceData.temperature)
               && Objects.equals(this.hotelCode, preferenceData.hotelCode)
               && Objects.equals(this.roomNumber, preferenceData.roomNumber)
               && Objects.equals(this.language, preferenceData.language)
               && Objects.equals(this.fragrance, preferenceData.fragrance)
               && Objects.equals(this.specialInstructions,
                        preferenceData.specialInstructions);
   }

   @Override
   public int hashCode()
   {
      return Objects.hash(guestId, mood, temperature, hotelCode, roomNumber,
               language, specialInstructions, reservationNumber);
   }


   @Override
   public String toString()
   {
      StringBuilder sb = new StringBuilder();
      sb.append("class PreferenceData {\n");

      sb.append("    guestId: ").append(toIndentedString(guestId)).append("\n");
      sb.append("    mood: ").append(toIndentedString(mood)).append("\n");
      sb.append("    temperature: ").append(toIndentedString(temperature))
               .append("\n");
      sb.append("    hotelCode: ").append(toIndentedString(hotelCode))
               .append("\n");
      sb.append("    roomNumber: ").append(toIndentedString(roomNumber))
               .append("\n");
      sb.append("    language: ").append(toIndentedString(language))
               .append("\n");
      sb.append("    reservationNumber: ")
               .append(toIndentedString(reservationNumber)).append("\n");
      sb.append("    fragrance: ").append(toIndentedString(fragrance))
               .append("\n");
      sb.append("    specialInstructions: ")
               .append(toIndentedString(specialInstructions)).append("\n");
      sb.append("}");
      return sb.toString();
   }

   /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
   private String toIndentedString(java.lang.Object o)
   {
      if (o == null)
      {
         return "null";
      }
      return o.toString().replace("\n", "\n    ");
   }
}

